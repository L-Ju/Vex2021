while(1){
   // leftY, rightY, shooter, pushup, rollerleft, rollerright, pushup, delay

  //tank drive
      drive -> getModel() -> tank(controller.getAnalog(ControllerAnalog::leftY),
                                  controller.getAnalog(ControllerAnalog::rightY));

      std::cout << controller.getAnalog(ControllerAnalog::leftY) << ' ' <<  controller.getAnalog(ControllerAnalog::rightY) << ' ';
      if (controller.getDigital(okapi::ControllerDigital::X))  {
          MTR_shooter.moveVelocity(-600);
          std::cout << -600 << ' ';
          std::cout << 0 << ' ';
      } else if (controller.getDigital(okapi::ControllerDigital::L2)) {
          MTR_shooter.moveVelocity(600);
          std::cout << 600 << ' ';
          std::cout << 0 << ' ';
      } else if (controller.getDigital(okapi::ControllerDigital::L1)) {
          MTR_shooter.moveVelocity(-600);
          std::cout << -600 << ' ';
          MTR_pushup.moveVelocity(-400);
          std::cout << -400 << ' ';
      } else {
          MTR_shooter.moveVelocity(0);
          std::cout << 0 << ' ';
          std::cout << 0 << ' ';
      }

      if (controller.getDigital(okapi::ControllerDigital::R1)) {
          pickUpBalls();
      } else if (controller.getDigital(okapi::ControllerDigital::R2)) {
          MTR_rollerLeft.moveVelocity(200);
          std::cout << 200 << ' ';
          MTR_rollerRight.moveVelocity(-200);
          std::cout << -200 << ' ';
          if(controller.getDigital(okapi::ControllerDigital::L1)){
              std::cout << -400 << ' ';
          }
          else{
              std::cout << 0 << ' ';
          }
      } else {
          MTR_rollerLeft.moveVelocity(0);
          std::cout << 0 << ' ';
          MTR_rollerRight.moveVelocity(0) ;
          std::cout << 0 << ' ';
          if(!controller.getDigital(okapi::ControllerDigital::L1)){
              MTR_pushup.moveVelocity(0);
              std::cout << 0 << ' ';
          }
          else{
              std::cout << -400 << ' ';
          }
      }
      pros::delay(10);
  }
